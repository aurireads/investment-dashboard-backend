version: "3.9"

services:
  db:
    container_name: postgres_db
    image: postgres:15-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - .:/app
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery_worker:
    container_name: celery_worker
    build:
      context: .
      dockerfile: Dockerfile
    command: celery --app app.core.tasks.celery_app worker -l info
    env_file:
      - .env
    depends_on:
      - redis
      - backend

  celery_beat:
    container_name: celery_beat
    build:
      context: .
      dockerfile: Dockerfile
    command: celery --app app.core.tasks.celery_app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - .env
    depends_on:
      - redis
      - backend

volumes:
  postgres_data: